# Natrix2; Config File
# General settings for the pipeline
general:
        filename: input_data/Nanopore_data # Path to raw data folder with primer table and config file; use relative path if outside Natrix2 root (e.g., input/example_data)
        output_dir: results_nanopore_vsearch # Path to the custom output directory (relative to the Natrix2 root, e.g., results/my_output); avoid using dashes in folder names
        primertable: primer_table/Nanopore.csv # Path to the primer table (.csv); use a relative path if outside the Natrix2 root (e.g., input/example_data/Illumina.csv)
        units: units.tsv # Path to the sequencing unit sheet (.tsv); the filename will be concatenated with output_dir (e.g., units.tsv)
        cores: 20 # Number of CPU cores (e.g., 20)
        memory: 10000 # Available RAM in MB (e.g., 16000 for 16 GB)
        multiqc: FALSE # Run initial quality check with FastQC and MultiQC (only for unassembled reads, e.g., TRUE)
        demultiplexing: FALSE # Run demultiplexing if reads were not processed by the sequencing provider (Illumina only, slow)
        read_sorting: FALSE # Run read sorting for paired-end reads if not sorted by the sequencing provider (Illumina only, slow)
        already_assembled: FALSE # Skip quality control and assembly if reads are already assembled (Illumina only)
        seq_rep: OTU # Type of sequence representative: "ASV" (via DADA2) or "OTU" (via SWARM or VSEARCH)

# Define sequencing data type (e.g., Nanopore or Illumina)
dataset:
        nanopore: TRUE # Set to TRUE for long reads (e.g., Nanopore) or FALSE for short reads (e.g., Illumina)

# Quality check and primer removal for Nanopore reads
nanopore:
        quality_filt: 15 # Minimum Phred quality score (e.g., 15)
        min_length: 1000 # Minimum read length (e.g., 1000)
        max_length: 2500 # Maximum read length (e.g., 2500)
        head_trim: 0 # Trim N nucleotides from the start of each read (e.g., 0)
        tail_trim: 0 # Trim N nucleotides from the end of each read (e.g., 0)
        pychopper: TRUE # PyChopper for trimming, reorientation, and quality filtering (e.g., TRUE)
        pychopqual: 7 # Minimum mean Q-score required for PyChopper filtering (e.g., 7)
        racon: 4 # Number of Racon correction iterations (1–5); fewer needed for high-quality reads (e.g., 4)

# Quality check and primer removal for Illumina reads
qc:
        threshold: 0.9 # PANDAseq score threshold a sequence must meet to be retained (e.g., 0.9)
        minoverlap: 15 # Minimum required overlap between forward and reverse reads (e.g., 15)
        minqual: 1 # Minimum base quality in an assembled read for PANDAseq acceptance (e.g., 1)
        minlen: 100 # Minimum sequence length after primer removal accepted by PANDAseq or Cutadapt (e.g., 100)
        maxlen: 10000 # Maximum sequence length after primer removal accepted by PANDAseq or Cutadapt (e.g., 600)
        primer_offset: FALSE # PANDAseq to remove primers by length offset instead of sequence identity (OTU only, e.g., FALSE)
        mq: 25 # Minimum average quality score for pre-assembly filtering with prinseq (PHRED score, e.g., 25)
        barcode_removed: TRUE # Set to TRUE if sequences are barcode-free (e.g., TRUE)
        all_primer: TRUE # Set to TRUE if sequences are free of primers, barcodes, or other additional subsequences (e.g., TRUE)

# Dereplication of sequences using CD-HIT
derep:
        clustering: 1 # Percent identity for CD-HIT (1 = 100%); use 1 to remove only identical sequences (recommended)
        length_overlap: 0.0 # Length difference cutoff for CD-HIT; e.g., 0.9 means shorter sequences must be ≥90% of the representative length        
        representative: most_common # Type of representative sequence per CD-HIT cluster: "longest" or "most_common"

# Chimera detection settings using VSEARCH
chim:
        beta: 8.0 # Weight of a "no" vote in chimera detection (e.g., 8.0)
        pseudo_count: 1.2 # Pseudo-count prior on number of "no" votes (e.g., 1.2)
        abskew: 16 # Minimum abundance skew: min(parent1, parent2) / child (e.g., 16)

# Merging and filtering settings
merge:
        filter_method: not_split # Split-sample mode: "split_sample" if used, otherwise "not_split" (not recommended for Nanopore; use "cutoff" instead)
        ampliconduo: FALSE # Use AmpliconDuo for statistical validation (e.g., FALSE)
        cutoff: 2 # Minimum total abundance across samples to keep a read if not using split-sample approach (e.g., 2)
        ampli_corr: fdr # Correction method for Fisher’s exact test (e.g., "fdr")
        save_format: png # File format for the frequency-frequency plot (e.g., "png")
        plot_AmpDuo: TRUE # Save frequency-frequency plot (e.g., TRUE)
        paired_End: FALSE # Set to TRUE for paired-end data (e.g., TRUE)
        name_ext: R1 # Identifier for the forward read (e.g., "R1"); reverse read must use "R2"; required for paired-end data and must appear at the end of the filename before the file extension

# Clustering of OTUs using SWARM or VSEARCH
clustering: "vsearch" # OTU clustering method: "swarm" or "vsearch" (Nanopore supports only "vsearch")
vsearch_id: 0.97 # Percent identity for VSEARCH OTU clustering (e.g., 0.97 = 97%)

# Post-clustering filtering (OTU only)
postcluster:
        mumu: FALSE # Use MUMU filtering after clustering (OTU only, e.g., TRUE)

# MOTHUR parameters for taxonomic classification
classify:
        mothur: TRUE # Use MOTHUR for taxonomic classification (e.g., TRUE)
        search: kmer # Method to find the most similar reference: "suffix", "kmer", "blast", "align", or "distance" (default: "kmer")
        method: wang # Classification method: "wang", "knn", or "zap" (default: "wang")
        database: pr2 # Reference database to use with MOTHUR: "pr2", "unite", or "silva" (e.g., "pr2")
        cutoff: 0 # Min. confidence (0–100), 0 = no filter (default: 0)
# Reference database versions
database_version:
        pr2: 5.0.0 # Version number of the PR2 reference database
        silva: 138.2 # Version number of the SILVA reference database
# Paths to reference and taxonomy files for each database
database_path:
        silva_tax: database/silva_db.138.2.tax # Path to SILVA taxonomy file
        silva_ref: database/silva_db.138.2.fasta # Path to SILVA reference FASTA
        pr2_ref: database/pr2db.5.0.0.fasta # Path to PR2 reference FASTA
        pr2_tax: database/pr2db.5.0.0.tax # Path to PR2 taxonomy file
        unite_ref: database/unite_v10.fasta # Path to UNITE reference FASTA
        unite_tax: database/unite_v10.tax # Path to UNITE taxonomy file

# BLAST classification
blast:
        blast: FALSE # Use BLAST for taxonomic classification (e.g., TRUE or FALSE)
        database: NCBI # Reference database for BLAST: "NCBI" or "SILVA"
        drop_tax_classes: '.*unclassified Bacteria.*,.*uncultured.*bacterium.*' # Comma-separated list of taxonomic classes to exclude (by ID, name, or regex)
        db_path: database/ncbi/nt # Path to BLAST database (e.g., SILVA: database/silva/silva.db or NCBI: database/ncbi/nt); downloaded automatically
        max_target_seqs: 10 # Number of NCBI BLAST hits saved per sequence or OTU (e.g., 10)
        ident: 90.0 # Minimum identity required between query and target sequence (e.g., 90.0); lower values may require manual filtering afterward
        evalue: 1e-20 # Maximum accepted e-value (e.g., 1e-20); higher values may require manual filtering afterward
